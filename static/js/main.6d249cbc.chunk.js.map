{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Jweet.js","components/JweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Jweet","jweetObj","isOwner","editing","setEditing","text","newJweet","setNewJweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","JweetFactory","userObj","jweet","setJweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","jweets","setJweets","useEffect","onSnapshot","snapshot","jweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","photoUrl","newPhotoUrl","setNewPhotoUrl","updateProfile","photoURL","onFileChange","textAlign","width","height","borderRadius","faEdit","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d249cbc.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"myBase\";\r\n\r\nconst AuthForm = () => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const[newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data;\r\n    try{\r\n      if(newAccount){\r\n        data = await authService.createUserWithEmailAndPassword(email,password);\r\n      }else{\r\n        data = await authService.signInWithEmailAndPassword(email,password);\r\n      }\r\n      console.log(data);\r\n    }catch(error){\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input \r\n          type=\"submit\" \r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"myBase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Jweet = ({ jweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newJweet, setNewJweet] = useState(jweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this jweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`jweets/${jweetObj.id}`).delete();\r\n      await storageService.refFromURL(jweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`jweets/${jweetObj.id}`).update({\r\n      text: newJweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewJweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your jweet\"\r\n              value={newJweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update Jweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n          <>\r\n            <h4>{jweetObj.text}</h4>\r\n            {jweetObj.attachmentUrl && <img src={jweetObj.attachmentUrl} />}\r\n            {isOwner && (\r\n              <div className=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jweet;","import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst JweetFactory = ({ userObj }) => {\r\n  const [jweet, setJweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (jweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const jweetObj = {\r\n      text: jweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    };\r\n    await dbService.collection(\"jweets\").add(jweetObj);\r\n    setJweet(\"\");\r\n    setAttachment(\"\");\r\n  }\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setJweet(value);\r\n  }\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={jweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default JweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport {dbService} from \"myBase\";\r\nimport Jweet from \"components/Jweet\";\r\nimport JweetFactory from \"components/JweetFactory\";\r\n\r\nconst Home= ({userObj}) => {\r\n  const [jweets, setJweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"jweets\").onSnapshot((snapshot) => {\r\n      const jweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setJweets(jweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"container\">\r\n      <JweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {jweets.map((jweet) => (\r\n          <Jweet \r\n            key={jweet.id}\r\n            jweetObj={jweet}\r\n            isOwner={jweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default Home;","import { authService, dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [newPhotoUrl, setNewPhotoUrl] = useState(userObj.photoUrl);\r\n  const photoUrl = userObj.photoUrl;\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n    if (userObj.photoUrl !== newPhotoUrl) {\r\n      let attachmentUrl = \"\";\r\n      if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n          .ref()\r\n          .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n      }\r\n      setAttachment(\"\");\r\n      await userObj.updateProfile({\r\n        photoURL: attachmentUrl,\r\n      });\r\n      await storageService.refFromURL(photoUrl).delete();\r\n      refreshUser();\r\n    }\r\n  };\r\n  const onFileChange = async (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n      setNewPhotoUrl(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <div style={{ textAlign: 'center' }}>\r\n          <img id=\"profile\" htmlFor=\"attach-file\"\r\n            src={newPhotoUrl}\r\n            width=\"150px\" height=\"150px\" style={{ borderRadius: 50 + '%' }} />\r\n          <div style={{ marginTop: 10 + 'px' }}>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n              <span>\r\n                Edit Photo\r\n                <FontAwesomeIcon icon={faEdit} />\r\n              </span>\r\n            </label>\r\n            <input\r\n              id=\"attach-file\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={onFileChange}\r\n              style={{\r\n                opacity: 0,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>) : (<Route exact path=\"/\"><Auth /></Route>)}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"myBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoUrl: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoUrl: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n          \"Initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}